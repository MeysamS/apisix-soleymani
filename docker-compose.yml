version: "3"

services:
  dashboard:
    image: "$BASE_URL/$SERVICE_APISIX_DASHBOARD"
    restart: always
    volumes:
      - ./dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml:ro
      - ./schema.json:/usr/local/apisix-dashboard/conf/schema.json
      - ./custom_plugins/igw/jwt-uaa.svg:/opt/apisix/plugins/jwt-uaa.svg:ro

    depends_on:
      - etcd
    ports:
      - "9000:9000/tcp"
    networks:
      - apisix

  apisix:
    # image: $BASE_URL/$SERVICE_APISIX:${APISIX_VER:-3.8.0-debian}
    container_name: apisix
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./openapi.yaml:/usr/local/apisix/conf/openapi.yaml:ro
      - ./custom_plugins/file-proxy.lua:/opt/apisix/plugins/file-proxy.lua:ro

      - ./custom_plugins/igw/jwt-uaa.lua:/opt/apisix/plugins/jwt-uaa.lua:ro
      - ./custom_plugins/igw/config.yaml:/opt/apisix/plugins/config.yaml:ro
      - ./custom_plugins/igw/jwt-uaa.svg:/opt/apisix/plugins/jwt-uaa.svg:ro
      
      - ./custom_plugins/egw/jwt-sso.lua:/opt/apisix/plugins/jwt-sso.lua:ro
      - ./custom_plugins/egw/jwt-sso-config.yaml:/opt/apisix/plugins/jwt-sso-config.yaml:ro

    depends_on:
      - etcd
    ##network_mode: host
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    networks:
      apisix:
  
  # luarocks:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   networks:
  #     - apisix  

  etcd:
    image: bitnami/etcd:3.5.11
    restart: always
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      apisix:

  web1:
    image: nginx:1.19.0-alpine
    restart: always
    volumes:
      - ./upstream/web1.conf:/etc/nginx/nginx.conf
    ports:
      - "9081:80/tcp"
    environment:
      - NGINX_PORT=80
    networks:
      apisix:

  web2:
    image: nginx:1.19.0-alpine
    restart: always
    volumes:
      - ./upstream/web2.conf:/etc/nginx/nginx.conf
    ports:
      - "9082:80/tcp"
    environment:
      - NGINX_PORT=80
    networks:
      apisix:

  prometheus:
    image: prom/prometheus:v2.25.0
    restart: always
    volumes:
      - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      apisix:

  grafana:
    image: grafana/grafana:7.3.7
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - "./grafana_conf/provisioning:/etc/grafana/provisioning"
      - "./grafana_conf/dashboards:/var/lib/grafana/dashboards"
      - "./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"
    networks:
      apisix:

networks:
  apisix:
    driver: bridge

volumes:
  etcd_data:
    driver: local